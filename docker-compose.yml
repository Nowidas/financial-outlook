services:
  # web:
  #   build: ./front
  #   ports:
  #     - "5173:5173"
  #   volumes:
  #     - ./front:/front
  #     - /front/node_modules
  api:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/backend
    command: bash -c "python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME}" ]
      timeout: 5s
      retries: 20
  redis:
    image: redis:7
  celery:
    build: ./backend
    environment:
      - GOCARDLESS_SECRET_KEY=${GOCARDLESS_SECRET_KEY}
      - GOCARDLESS_SECRET_ID=${GOCARDLESS_SECRET_ID}
    command: celery -A myproject worker -l info -B -E
    volumes:
      - ./backend:/backend
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - api
volumes:
  postgres_data:
